pipeline {
	agent { node { label 'lisk-core' } }
	options { skipDefaultCheckout() }
	stages {
		stage('Checkout SCM') {
			when { branch 'development' }
			steps {
				cleanWs()
				dir('lisk-sdk') {
					git branch: 'development', url: 'https://github.com/LiskHQ/lisk-sdk'
				}
				dir('lisk-core') {
					git branch: 'development', url: 'https://github.com/LiskHQ/lisk-core'
				}
			}
		}
		stage('Build SDK') {
			when { branch 'development' }
			steps {
				dir('lisk-sdk') {
					nvm(readFile(".nvmrc").trim()) {
						sh '''
						npm install --global yarn
						yarn
						yarn build
						'''
					}
				}
			}
		}
		stage('Publish SDK') {
			when { branch 'development' }
			steps {
				dir('lisk-sdk') {
					nvm(readFile(".nvmrc").trim()) {
						withCredentials([string(credentialsId: 'npm_lisk_io_registry_password', variable: 'PASS')]) {
							sh '''#!/bin/bash -e
							echo //npm.lisk.io/:_authToken=$( curl --silent https://npm.lisk.io/-/user/org.couchdb.user:jenkins/-rev/undefined -u jenkins:$PASS -X PUT \
							  -d '{"_id":"org.couchdb.user:jenkins","name":"jenkins","password":"'$PASS'","type":"user","roles":[],"date":"2020-07-23T06:13:20.194Z","ok":"you are authenticated as 'undefined'"}' \
							  -H content-type:application/json |jq --raw-output .token ) >~/.npmrc
							'''
						}
						sh 'npx lerna publish --canary --preid nightly$BUILD_NUMBER --registry https://npm.lisk.io --ignore-scripts --yes |tee lerna_publish.log'
					}
				}
			}
			post {
				always {
				sh 'rm -f ~/.npmrc'
				}
			}
		}
		stage('Build Core') {
			when { branch 'development' }
			steps {
				dir('lisk-core') {
					nvm(readFile(".nvmrc").trim()) {
						sh '''
						package_version=$( jq --raw-output .version package.json )
						jq '.version="'${package_version%%-*}-nightly$BUILD_NUMBER'"' package.json >package.json_; mv -f package.json_ package.json
						# temporary workaround
						jq '.private=false' package.json >package.json_; mv -f package.json_ package.json
						# TODO: set SDK version
						published_sdk_version=$( grep --after-context=100 '^Successfully published:' ../lisk-sdk/lerna_publish.log |grep '^ - lisk-sdk@' | cut -d @ -f 2 )
						jq '.dependencies["lisk-sdk"]="'$published_sdk_version'"' package.json >package.json_; mv -f package.json_ package.json
						npm install --registry https://npm.lisk.io/
						npm install --global yarn
						npm run build
						npm test
						'''
					}
				}
			}
		}
		stage('Publish Core') {
			when { branch 'development' }
			steps {
				dir('lisk-core') {
					nvm(readFile(".nvmrc").trim()) {
						withCredentials([string(credentialsId: 'npm_lisk_io_registry_password', variable: 'PASS')]) {
							sh '''#!/bin/bash -e
							echo //npm.lisk.io/:_authToken=$( curl --silent https://npm.lisk.io/-/user/org.couchdb.user:jenkins/-rev/undefined -u jenkins:$PASS -X PUT \
							  -d '{"_id":"org.couchdb.user:jenkins","name":"jenkins","password":"'$PASS'","type":"user","roles":[],"date":"2020-07-23T06:13:20.194Z","ok":"you are authenticated as 'undefined'"}' \
							  -H content-type:application/json |jq --raw-output .token ) >~/.npmrc
							'''
						}
						sh 'npm publish --registry https://npm.lisk.io'
					}
				}
			}
			post {
				always {
				sh 'rm -f ~/.npmrc'
				}
			}
		}
	}
}
// vim: filetype=groovy
